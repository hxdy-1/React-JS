{"ast":null,"code":"var _jsxFileName = \"D:\\\\React JS\\\\Foodiezz\\\\src\\\\store\\\\CartProvider.js\",\n  _s = $RefreshSig$();\nimport { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\nconst cartReducer = (state, action) => {\n  // if (action.type === \"ADD_TO_CART\") {\n  //     const latestTotalAmount =\n  //         state.totalAmount + action.item.price * action.item.amount;\n\n  //     const existingCartItemIndex = state.items.findIndex(\n  //         (item) => item.id === action.item.id\n  //     );\n\n  //     const existingCartItem = state.items[existingCartItemIndex];\n  //     // console.log(existingCartItem);\n  //     let latestItems;\n\n  //     if (existingCartItem) {\n  //         const latestItem = {\n  //             ...existingCartItem,\n  //             amount: existingCartItem.amount + action.item.amount,\n  //         };\n  //         latestItems = [...state.items];\n  //         latestItems[existingCartItemIndex] = latestItem;\n  //     } else {\n  //         latestItems = state.items.concat(action.item);\n  //     }\n\n  //     return {\n  //         items: latestItems,\n  //         totalAmount: latestTotalAmount,\n  //     };\n  // }\n\n  // if (action.type === \"REMOVE_FROM_CART\") {\n  //     const existingCartItemIndex = state.items.findIndex(\n  //         (item) => item.id === action.id\n  //     );\n  //     const existingItem = state.items[existingCartItemIndex];\n  //     const updatedTotalAmount = state.totalAmount - existingItem.price;\n  //     let updatedItems;\n  //     if (existingItem.amount === 1) {\n  //         updatedItems = state.items.filter((item) => item.id !== action.id);\n  //     } else {\n  //         const updatedItem = {\n  //             ...existingItem,\n  //             amount: existingItem.amount - 1,\n  //         };\n  //         updatedItems = [...state.items];\n  //         updatedItems[existingCartItemIndex] = updatedItem;\n  //     }\n\n  //     return {\n  //         items: updatedItems,\n  //         totalAmount: updatedTotalAmount,\n  //     };\n  // }\n\n  return defaultCartState;\n};\nconst CartProvider = props => {\n  _s();\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: \"ADD_TO_CART\",\n      item: item\n    });\n  };\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE_FROM_CART\",\n      id: id\n    });\n  };\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n};\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["useReducer","CartContext","jsxDEV","_jsxDEV","defaultCartState","items","totalAmount","cartReducer","state","action","CartProvider","props","_s","cartState","dispatchCartAction","addItemToCartHandler","item","type","removeItemFromCartHandler","id","cartContext","addItem","removeItem","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/React JS/Foodiezz/src/store/CartProvider.js"],"sourcesContent":["import { useReducer } from \"react\";\r\nimport CartContext from \"./cart-context\";\r\n\r\nconst defaultCartState = {\r\n    items: [],\r\n    totalAmount: 0,\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n    // if (action.type === \"ADD_TO_CART\") {\r\n    //     const latestTotalAmount =\r\n    //         state.totalAmount + action.item.price * action.item.amount;\r\n\r\n    //     const existingCartItemIndex = state.items.findIndex(\r\n    //         (item) => item.id === action.item.id\r\n    //     );\r\n\r\n    //     const existingCartItem = state.items[existingCartItemIndex];\r\n    //     // console.log(existingCartItem);\r\n    //     let latestItems;\r\n\r\n    //     if (existingCartItem) {\r\n    //         const latestItem = {\r\n    //             ...existingCartItem,\r\n    //             amount: existingCartItem.amount + action.item.amount,\r\n    //         };\r\n    //         latestItems = [...state.items];\r\n    //         latestItems[existingCartItemIndex] = latestItem;\r\n    //     } else {\r\n    //         latestItems = state.items.concat(action.item);\r\n    //     }\r\n\r\n    //     return {\r\n    //         items: latestItems,\r\n    //         totalAmount: latestTotalAmount,\r\n    //     };\r\n    // }\r\n\r\n    // if (action.type === \"REMOVE_FROM_CART\") {\r\n    //     const existingCartItemIndex = state.items.findIndex(\r\n    //         (item) => item.id === action.id\r\n    //     );\r\n    //     const existingItem = state.items[existingCartItemIndex];\r\n    //     const updatedTotalAmount = state.totalAmount - existingItem.price;\r\n    //     let updatedItems;\r\n    //     if (existingItem.amount === 1) {\r\n    //         updatedItems = state.items.filter((item) => item.id !== action.id);\r\n    //     } else {\r\n    //         const updatedItem = {\r\n    //             ...existingItem,\r\n    //             amount: existingItem.amount - 1,\r\n    //         };\r\n    //         updatedItems = [...state.items];\r\n    //         updatedItems[existingCartItemIndex] = updatedItem;\r\n    //     }\r\n\r\n    //     return {\r\n    //         items: updatedItems,\r\n    //         totalAmount: updatedTotalAmount,\r\n    //     };\r\n    // }\r\n\r\n    return defaultCartState;\r\n};\r\n\r\nconst CartProvider = (props) => {\r\n    const [cartState, dispatchCartAction] = useReducer(\r\n        cartReducer,\r\n        defaultCartState\r\n    );\r\n\r\n    const addItemToCartHandler = (item) => {\r\n        dispatchCartAction({ type: \"ADD_TO_CART\", item: item });\r\n    };\r\n\r\n    const removeItemFromCartHandler = (id) => {\r\n        dispatchCartAction({ type: \"REMOVE_FROM_CART\", id: id });\r\n    };\r\n\r\n    const cartContext = {\r\n        items: cartState.items,\r\n        totalAmount: cartState.totalAmount,\r\n        addItem: addItemToCartHandler,\r\n        removeItem: removeItemFromCartHandler,\r\n    };\r\n\r\n    return (\r\n        <CartContext.Provider value={cartContext}>\r\n            {props.children}\r\n        </CartContext.Provider>\r\n    );\r\n};\r\n\r\nexport default CartProvider;\r\n"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,OAAOC,WAAW,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,gBAAgB,GAAG;EACrBC,KAAK,EAAE,EAAE;EACTC,WAAW,EAAE;AACjB,CAAC;AAED,MAAMC,WAAW,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACnC;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA,OAAOL,gBAAgB;AAC3B,CAAC;AAED,MAAMM,YAAY,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC5B,MAAM,CAACC,SAAS,EAAEC,kBAAkB,CAAC,GAAGd,UAAU,CAC9CO,WAAW,EACXH,gBACJ,CAAC;EAED,MAAMW,oBAAoB,GAAIC,IAAI,IAAK;IACnCF,kBAAkB,CAAC;MAAEG,IAAI,EAAE,aAAa;MAAED,IAAI,EAAEA;IAAK,CAAC,CAAC;EAC3D,CAAC;EAED,MAAME,yBAAyB,GAAIC,EAAE,IAAK;IACtCL,kBAAkB,CAAC;MAAEG,IAAI,EAAE,kBAAkB;MAAEE,EAAE,EAAEA;IAAG,CAAC,CAAC;EAC5D,CAAC;EAED,MAAMC,WAAW,GAAG;IAChBf,KAAK,EAAEQ,SAAS,CAACR,KAAK;IACtBC,WAAW,EAAEO,SAAS,CAACP,WAAW;IAClCe,OAAO,EAAEN,oBAAoB;IAC7BO,UAAU,EAAEJ;EAChB,CAAC;EAED,oBACIf,OAAA,CAACF,WAAW,CAACsB,QAAQ;IAACC,KAAK,EAAEJ,WAAY;IAAAK,QAAA,EACpCd,KAAK,CAACc;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAE/B,CAAC;AAACjB,EAAA,CA1BIF,YAAY;AAAAoB,EAAA,GAAZpB,YAAY;AA4BlB,eAAeA,YAAY;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
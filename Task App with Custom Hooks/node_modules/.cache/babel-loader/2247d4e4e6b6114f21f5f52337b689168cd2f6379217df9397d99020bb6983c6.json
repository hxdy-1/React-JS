{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from \"react\";\nconst useHttp = applyData => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const sendRequest = useCallback(async (requestConfig, taskText) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(requestConfig.url, {\n        method: requestConfig.method ? requestConfig.method : \"GET\",\n        headers: requestConfig.headers ? requestConfig.headers : {},\n        body: requestConfig.body ? JSON.stringify(requestConfig.body) : null\n      });\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n      const data = await response.json();\n      applyData(data);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n    setIsLoading(false);\n  }, [applyData]);\n  return {\n    isLoading,\n    error,\n    sendRequest\n  };\n};\n_s(useHttp, \"FFcdbk+kTfFKRpY6eKN2uj4p9Os=\");\nexport default useHttp;","map":{"version":3,"names":["useState","useCallback","useHttp","applyData","_s","isLoading","setIsLoading","error","setError","sendRequest","requestConfig","taskText","response","fetch","url","method","headers","body","JSON","stringify","ok","Error","data","json","err","message"],"sources":["D:/React JS/Task App with Custom Hooks/src/hooks/use-http.js"],"sourcesContent":["import { useState, useCallback } from \"react\";\r\n\r\nconst useHttp = (applyData) => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const sendRequest = useCallback(\r\n        async (requestConfig, taskText) => {\r\n            setIsLoading(true);\r\n            setError(null);\r\n            try {\r\n                const response = await fetch(requestConfig.url, {\r\n                    method: requestConfig.method ? requestConfig.method : \"GET\",\r\n                    headers: requestConfig.headers ? requestConfig.headers : {},\r\n                    body: requestConfig.body\r\n                        ? JSON.stringify(requestConfig.body)\r\n                        : null,\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    throw new Error(\"Request failed!\");\r\n                }\r\n\r\n                const data = await response.json();\r\n                applyData(data);\r\n            } catch (err) {\r\n                setError(err.message || \"Something went wrong!\");\r\n            }\r\n            setIsLoading(false);\r\n        },\r\n        [applyData]\r\n    );\r\n\r\n    return {\r\n        isLoading,\r\n        error,\r\n        sendRequest,\r\n    };\r\n};\r\n\r\nexport default useHttp;\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAE7C,MAAMC,OAAO,GAAIC,SAAS,IAAK;EAAAC,EAAA;EAC3B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMS,WAAW,GAAGR,WAAW,CAC3B,OAAOS,aAAa,EAAEC,QAAQ,KAAK;IAC/BL,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACA,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACH,aAAa,CAACI,GAAG,EAAE;QAC5CC,MAAM,EAAEL,aAAa,CAACK,MAAM,GAAGL,aAAa,CAACK,MAAM,GAAG,KAAK;QAC3DC,OAAO,EAAEN,aAAa,CAACM,OAAO,GAAGN,aAAa,CAACM,OAAO,GAAG,CAAC,CAAC;QAC3DC,IAAI,EAAEP,aAAa,CAACO,IAAI,GAClBC,IAAI,CAACC,SAAS,CAACT,aAAa,CAACO,IAAI,CAAC,GAClC;MACV,CAAC,CAAC;MAEF,IAAI,CAACL,QAAQ,CAACQ,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;MACtC;MAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MAClCpB,SAAS,CAACmB,IAAI,CAAC;IACnB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACVhB,QAAQ,CAACgB,GAAG,CAACC,OAAO,IAAI,uBAAuB,CAAC;IACpD;IACAnB,YAAY,CAAC,KAAK,CAAC;EACvB,CAAC,EACD,CAACH,SAAS,CACd,CAAC;EAED,OAAO;IACHE,SAAS;IACTE,KAAK;IACLE;EACJ,CAAC;AACL,CAAC;AAACL,EAAA,CApCIF,OAAO;AAsCb,eAAeA,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}
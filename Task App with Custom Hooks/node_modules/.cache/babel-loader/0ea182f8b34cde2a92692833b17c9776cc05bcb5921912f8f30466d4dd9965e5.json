{"ast":null,"code":"var _jsxFileName = \"D:\\\\React JS\\\\Task App with Custom Hooks\\\\src\\\\components\\\\NewTask\\\\NewTask.js\",\n  _s = $RefreshSig$();\nimport Section from \"../UI/Section\";\nimport TaskForm from \"./TaskForm\";\nimport useHttp from \"../../hooks/use-http\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewTask = props => {\n  _s();\n  const {\n    error,\n    isLoading,\n    sendRequest: sendTaskReq\n  } = useHttp();\n  const enterTaskHandler = async taskText => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(\"https://task-app-b00fc-default-rtdb.firebaseio.com/tasks.json\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          text: taskText\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n      const data = await response.json();\n      const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n      const createdTask = {\n        id: generatedId,\n        text: taskText\n      };\n      props.onAddTask(createdTask);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n    setIsLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Section, {\n    children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n      onEnterTask: enterTaskHandler,\n      loading: isLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(NewTask, \"MiDUWuIOFoDbGDVoUvHyjkX+vEE=\", false, function () {\n  return [useHttp];\n});\n_c = NewTask;\nexport default NewTask;\nvar _c;\n$RefreshReg$(_c, \"NewTask\");","map":{"version":3,"names":["Section","TaskForm","useHttp","jsxDEV","_jsxDEV","NewTask","props","_s","error","isLoading","sendRequest","sendTaskReq","enterTaskHandler","taskText","setIsLoading","setError","response","fetch","method","body","JSON","stringify","text","headers","ok","Error","data","json","generatedId","name","createdTask","id","onAddTask","err","message","children","onEnterTask","loading","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/React JS/Task App with Custom Hooks/src/components/NewTask/NewTask.js"],"sourcesContent":["import Section from \"../UI/Section\";\nimport TaskForm from \"./TaskForm\";\nimport useHttp from \"../../hooks/use-http\";\n\nconst NewTask = (props) => {\n    const { error, isLoading, sendRequest: sendTaskReq } = useHttp();\n\n    const enterTaskHandler = async (taskText) => {\n        setIsLoading(true);\n        setError(null);\n        try {\n            const response = await fetch(\n                \"https://task-app-b00fc-default-rtdb.firebaseio.com/tasks.json\",\n                {\n                    method: \"POST\",\n                    body: JSON.stringify({ text: taskText }),\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                }\n            );\n\n            if (!response.ok) {\n                throw new Error(\"Request failed!\");\n            }\n\n            const data = await response.json();\n\n            const generatedId = data.name; // firebase-specific => \"name\" contains generated id\n            const createdTask = { id: generatedId, text: taskText };\n\n            props.onAddTask(createdTask);\n        } catch (err) {\n            setError(err.message || \"Something went wrong!\");\n        }\n        setIsLoading(false);\n    };\n\n    return (\n        <Section>\n            <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n            {error && <p>{error}</p>}\n        </Section>\n    );\n};\n\nexport default NewTask;\n"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,eAAe;AACnC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,OAAO,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,OAAO,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACvB,MAAM;IAAEC,KAAK;IAAEC,SAAS;IAAEC,WAAW,EAAEC;EAAY,CAAC,GAAGT,OAAO,CAAC,CAAC;EAEhE,MAAMU,gBAAgB,GAAG,MAAOC,QAAQ,IAAK;IACzCC,YAAY,CAAC,IAAI,CAAC;IAClBC,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACxB,+DAA+D,EAC/D;QACIC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,IAAI,EAAET;QAAS,CAAC,CAAC;QACxCU,OAAO,EAAE;UACL,cAAc,EAAE;QACpB;MACJ,CACJ,CAAC;MAED,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;MACtC;MAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MAElC,MAAMC,WAAW,GAAGF,IAAI,CAACG,IAAI,CAAC,CAAC;MAC/B,MAAMC,WAAW,GAAG;QAAEC,EAAE,EAAEH,WAAW;QAAEN,IAAI,EAAET;MAAS,CAAC;MAEvDP,KAAK,CAAC0B,SAAS,CAACF,WAAW,CAAC;IAChC,CAAC,CAAC,OAAOG,GAAG,EAAE;MACVlB,QAAQ,CAACkB,GAAG,CAACC,OAAO,IAAI,uBAAuB,CAAC;IACpD;IACApB,YAAY,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,oBACIV,OAAA,CAACJ,OAAO;IAAAmC,QAAA,gBACJ/B,OAAA,CAACH,QAAQ;MAACmC,WAAW,EAAExB,gBAAiB;MAACyB,OAAO,EAAE5B;IAAU;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC9DjC,KAAK,iBAAIJ,OAAA;MAAA+B,QAAA,EAAI3B;IAAK;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAElB,CAAC;AAAClC,EAAA,CAxCIF,OAAO;EAAA,QAC8CH,OAAO;AAAA;AAAAwC,EAAA,GAD5DrC,OAAO;AA0Cb,eAAeA,OAAO;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
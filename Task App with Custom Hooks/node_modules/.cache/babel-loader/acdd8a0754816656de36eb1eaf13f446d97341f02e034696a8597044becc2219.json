{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nconst useHttp = (requestConfig, applyData) => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const sendRequest = async taskText => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(requestConfig.url, {\n        method: requestConfig.method ? requestConfig.method : \"GET\",\n        headers: requestConfig.headers ? requestConfig.headers : {},\n        body: JSON.stringify(requestConfig.body)\n      });\n      if (!response.ok) {\n        throw new Error(\"Request failed!\");\n      }\n      const data = await response.json();\n      applyData(data);\n    } catch (err) {\n      setError(err.message || \"Something went wrong!\");\n    }\n    setIsLoading(false);\n  };\n  return {\n    isLoading,\n    error,\n    sendRequest\n  };\n};\n_s(useHttp, \"vj++RuHna9NxFPGCY0p/mi1GZNM=\");\nexport default useHttp;","map":{"version":3,"names":["useState","useHttp","requestConfig","applyData","_s","isLoading","setIsLoading","error","setError","sendRequest","taskText","response","fetch","url","method","headers","body","JSON","stringify","ok","Error","data","json","err","message"],"sources":["D:/React JS/Task App with Custom Hooks/src/hooks/use-http.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nconst useHttp = (requestConfig, applyData) => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const sendRequest = async (taskText) => {\r\n        setIsLoading(true);\r\n        setError(null);\r\n        try {\r\n            const response = await fetch(requestConfig.url, {\r\n                method: requestConfig.method ? requestConfig.method : \"GET\",\r\n                headers: requestConfig.headers ? requestConfig.headers : {},\r\n                body: JSON.stringify(requestConfig.body),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(\"Request failed!\");\r\n            }\r\n\r\n            const data = await response.json();\r\n            applyData(data);\r\n        } catch (err) {\r\n            setError(err.message || \"Something went wrong!\");\r\n        }\r\n        setIsLoading(false);\r\n    };\r\n\r\n    return {\r\n        isLoading,\r\n        error,\r\n        sendRequest,\r\n    };\r\n};\r\n\r\nexport default useHttp;\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,MAAMC,OAAO,GAAGA,CAACC,aAAa,EAAEC,SAAS,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMS,WAAW,GAAG,MAAOC,QAAQ,IAAK;IACpCJ,YAAY,CAAC,IAAI,CAAC;IAClBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACA,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACV,aAAa,CAACW,GAAG,EAAE;QAC5CC,MAAM,EAAEZ,aAAa,CAACY,MAAM,GAAGZ,aAAa,CAACY,MAAM,GAAG,KAAK;QAC3DC,OAAO,EAAEb,aAAa,CAACa,OAAO,GAAGb,aAAa,CAACa,OAAO,GAAG,CAAC,CAAC;QAC3DC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAChB,aAAa,CAACc,IAAI;MAC3C,CAAC,CAAC;MAEF,IAAI,CAACL,QAAQ,CAACQ,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;MACtC;MAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MAClCnB,SAAS,CAACkB,IAAI,CAAC;IACnB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACVf,QAAQ,CAACe,GAAG,CAACC,OAAO,IAAI,uBAAuB,CAAC;IACpD;IACAlB,YAAY,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,OAAO;IACHD,SAAS;IACTE,KAAK;IACLE;EACJ,CAAC;AACL,CAAC;AAACL,EAAA,CA/BIH,OAAO;AAiCb,eAAeA,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\React JS\\\\Investment Calculator\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Header from \"./components/Header/Header\";\nimport UserInputs from \"./components/UserInputs/UserInputs\";\nimport ResultsTable from \"./components/ResultsTable/ResultsTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [userInput, setUserInput] = useState(null);\n  const calculateHandler = userInput => {\n    console.log(userInput[\"current-savings\"]);\n    setUserInput(userInput);\n  };\n  const yearlyData = [];\n  if (userInput) {\n    let currentSavings = +userInput[\"current-savings\"];\n    const yearlyContribution = +userInput[\"yearly-contribution\"];\n    const expectedReturn = +userInput[\"expected-return\"] / 100;\n    const duration = +userInput[\"duration\"];\n\n    // The below code calculates yearly userInput (total savings, interest etc)\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      yearlyData.push({\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution\n      });\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(UserInputs, {\n      onSubmission: calculateHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), !userInput && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Nothing to be calculated here!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 28\n    }, this), userInput && /*#__PURE__*/_jsxDEV(ResultsTable, {\n      data: yearlyData,\n      initialInvestment: userInput.currentSavings\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"nCOotz9vTgzH/m310d2/03oFEtk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Header","UserInputs","ResultsTable","jsxDEV","_jsxDEV","App","_s","userInput","setUserInput","calculateHandler","console","log","yearlyData","currentSavings","yearlyContribution","expectedReturn","duration","i","yearlyInterest","push","year","savingsEndOfYear","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmission","data","initialInvestment","_c","$RefreshReg$"],"sources":["D:/React JS/Investment Calculator/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport Header from \"./components/Header/Header\";\nimport UserInputs from \"./components/UserInputs/UserInputs\";\nimport ResultsTable from \"./components/ResultsTable/ResultsTable\";\n\nfunction App() {\n    const [userInput, setUserInput] = useState(null);\n    const calculateHandler = (userInput) => {\n        console.log(userInput[\"current-savings\"]);\n        setUserInput(userInput);\n    };\n\n    const yearlyData = [];\n\n    if (userInput) {\n        let currentSavings = +userInput[\"current-savings\"];\n        const yearlyContribution = +userInput[\"yearly-contribution\"];\n        const expectedReturn = +userInput[\"expected-return\"] / 100;\n        const duration = +userInput[\"duration\"];\n\n        // The below code calculates yearly userInput (total savings, interest etc)\n        for (let i = 0; i < duration; i++) {\n            const yearlyInterest = currentSavings * expectedReturn;\n            currentSavings += yearlyInterest + yearlyContribution;\n            yearlyData.push({\n                year: i + 1,\n                yearlyInterest: yearlyInterest,\n                savingsEndOfYear: currentSavings,\n                yearlyContribution: yearlyContribution,\n            });\n        }\n    }\n\n    return (\n        <div>\n            <Header />\n            <UserInputs onSubmission={calculateHandler} />\n            {!userInput && <h2>Nothing to be calculated here!</h2>}\n            {userInput && (\n                <ResultsTable\n                    data={yearlyData}\n                    initialInvestment={userInput.currentSavings}\n                />\n            )}\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,OAAOC,YAAY,MAAM,wCAAwC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAMU,gBAAgB,GAAIF,SAAS,IAAK;IACpCG,OAAO,CAACC,GAAG,CAACJ,SAAS,CAAC,iBAAiB,CAAC,CAAC;IACzCC,YAAY,CAACD,SAAS,CAAC;EAC3B,CAAC;EAED,MAAMK,UAAU,GAAG,EAAE;EAErB,IAAIL,SAAS,EAAE;IACX,IAAIM,cAAc,GAAG,CAACN,SAAS,CAAC,iBAAiB,CAAC;IAClD,MAAMO,kBAAkB,GAAG,CAACP,SAAS,CAAC,qBAAqB,CAAC;IAC5D,MAAMQ,cAAc,GAAG,CAACR,SAAS,CAAC,iBAAiB,CAAC,GAAG,GAAG;IAC1D,MAAMS,QAAQ,GAAG,CAACT,SAAS,CAAC,UAAU,CAAC;;IAEvC;IACA,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,EAAEC,CAAC,EAAE,EAAE;MAC/B,MAAMC,cAAc,GAAGL,cAAc,GAAGE,cAAc;MACtDF,cAAc,IAAIK,cAAc,GAAGJ,kBAAkB;MACrDF,UAAU,CAACO,IAAI,CAAC;QACZC,IAAI,EAAEH,CAAC,GAAG,CAAC;QACXC,cAAc,EAAEA,cAAc;QAC9BG,gBAAgB,EAAER,cAAc;QAChCC,kBAAkB,EAAEA;MACxB,CAAC,CAAC;IACN;EACJ;EAEA,oBACIV,OAAA;IAAAkB,QAAA,gBACIlB,OAAA,CAACJ,MAAM;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVtB,OAAA,CAACH,UAAU;MAAC0B,YAAY,EAAElB;IAAiB;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAC7C,CAACnB,SAAS,iBAAIH,OAAA;MAAAkB,QAAA,EAAI;IAA8B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrDnB,SAAS,iBACNH,OAAA,CAACF,YAAY;MACT0B,IAAI,EAAEhB,UAAW;MACjBiB,iBAAiB,EAAEtB,SAAS,CAACM;IAAe;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CACJ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACpB,EAAA,CAzCQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AA2CZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\React JS\\\\Investment Calculator\\\\src\\\\components\\\\ResultsTable\\\\ResultsTable.js\";\nimport React, { useState } from \"react\";\nimport styles from \"./ResultsTable.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"INR\",\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2\n});\nconst ResultsTable = props => {\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: styles.result,\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Year\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Total Savings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Interest (Year)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Total Interest\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Invested Capital\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: props.data.map(yearlyData => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: yearlyData.year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: formatter.format(yearlyData.savingsEndOfYear)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: formatter.format(yearlyData.yearlyInterest)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: formatter.format(yearlyData.savingsEndOfYear - props.initialInvestment - yearlyData.yearlyContribution * yearlyData.year)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: formatter.format(props.initialInvestment + yearlyData.yearlyContribution * yearlyData.year)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this)]\n      }, yearlyData.year, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n_c = ResultsTable;\nexport default ResultsTable;\nvar _c;\n$RefreshReg$(_c, \"ResultsTable\");","map":{"version":3,"names":["React","useState","styles","jsxDEV","_jsxDEV","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","ResultsTable","props","className","result","children","fileName","_jsxFileName","lineNumber","columnNumber","data","map","yearlyData","year","format","savingsEndOfYear","yearlyInterest","initialInvestment","yearlyContribution","_c","$RefreshReg$"],"sources":["D:/React JS/Investment Calculator/src/components/ResultsTable/ResultsTable.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport styles from \"./ResultsTable.module.css\";\r\n\r\nconst formatter = new Intl.NumberFormat(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"INR\",\r\n    minimumFractionDigits: 2,\r\n    maximumFractionDigits: 2,\r\n});\r\n\r\nconst ResultsTable = (props) => {\r\n    return (\r\n        <table className={styles.result}>\r\n            <thead>\r\n                <tr>\r\n                    <th>Year</th>\r\n                    <th>Total Savings</th>\r\n                    <th>Interest (Year)</th>\r\n                    <th>Total Interest</th>\r\n                    <th>Invested Capital</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {props.data.map((yearlyData) => (\r\n                    <tr key={yearlyData.year}>\r\n                        <td>{yearlyData.year}</td>\r\n                        <td>{formatter.format(yearlyData.savingsEndOfYear)}</td>\r\n                        <td>{formatter.format(yearlyData.yearlyInterest)}</td>\r\n                        <td>\r\n                            {formatter.format(\r\n                                yearlyData.savingsEndOfYear -\r\n                                    props.initialInvestment -\r\n                                    yearlyData.yearlyContribution *\r\n                                        yearlyData.year\r\n                            )}\r\n                        </td>\r\n                        <td>\r\n                            {formatter.format(\r\n                                props.initialInvestment +\r\n                                    yearlyData.yearlyContribution *\r\n                                        yearlyData.year\r\n                            )}\r\n                        </td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    );\r\n};\r\n\r\nexport default ResultsTable;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
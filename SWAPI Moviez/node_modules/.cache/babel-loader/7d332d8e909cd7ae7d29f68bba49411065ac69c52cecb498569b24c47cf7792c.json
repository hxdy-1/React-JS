{"ast":null,"code":"var _jsxFileName = \"D:\\\\React JS\\\\SWAPI Moviez\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\n// https://swapi.dev/api/films/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchMoviesHandler = async () => {\n    try {\n      setIsLoading(true);\n      setError(null);\n      const response = await fetch(\"https://swapi.dev/api/films/\");\n      // console.log(response);\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong :(\");\n      }\n      const data = await response.json();\n      // console.log(data);\n\n      const transformedMovies = data.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date\n        };\n      });\n      setMovies(transformedMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [!isLoading && movies.length === 0 && !error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No movies found!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), isLoading && !error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 41\n      }, this), !isLoading && movies.length > 0 && /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"zuBJAn2dLkBMoQCfa8VUzB2Qvvo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MoviesList","jsxDEV","_jsxDEV","App","_s","movies","setMovies","isLoading","setIsLoading","error","setError","fetchMoviesHandler","response","fetch","ok","Error","data","json","transformedMovies","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","message","Fragment","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["D:/React JS/SWAPI Moviez/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\n// https://swapi.dev/api/films/\n\nfunction App() {\n    const [movies, setMovies] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    const fetchMoviesHandler = async () => {\n        try {\n            setIsLoading(true);\n            setError(null);\n            const response = await fetch(\"https://swapi.dev/api/films/\");\n            // console.log(response);\n\n            if (!response.ok) {\n                throw new Error(\"Something went wrong :(\");\n            }\n\n            const data = await response.json();\n            // console.log(data);\n\n            const transformedMovies = data.results.map((movieData) => {\n                return {\n                    id: movieData.episode_id,\n                    title: movieData.title,\n                    openingText: movieData.opening_crawl,\n                    releaseDate: movieData.release_date,\n                };\n            });\n\n            setMovies(transformedMovies);\n        } catch (error) {\n            setError(error.message);\n        }\n        setIsLoading(false);\n    };\n\n    return (\n        <React.Fragment>\n            <section>\n                <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n            </section>\n            <section>\n                {!isLoading && movies.length === 0 && !error && (\n                    <p>No movies found!</p>\n                )}\n                {isLoading && !error && <p>Loading...</p>}\n                {!isLoading && movies.length > 0 && (\n                    <MoviesList movies={movies} />\n                )}\n                {error && <p>{error}</p>}\n            </section>\n        </React.Fragment>\n    );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
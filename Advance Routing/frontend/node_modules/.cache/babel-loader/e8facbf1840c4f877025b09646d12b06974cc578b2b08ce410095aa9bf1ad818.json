{"ast":null,"code":"var _jsxFileName = \"D:\\\\React JS\\\\Advance Routing\\\\frontend\\\\src\\\\pages\\\\Events.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData, json, defer, Await } from \"react-router-dom\";\nimport { Suspense } from \"react\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const {\n    events\n  } = useLoaderData();\n  // console.log(events);\n  // const events = data.events;\n\n  // if (data.isError) {\n  // \treturn <p>{data.message}</p>;\n  // }\n\n  // return <EventsList events={data.events} />;\n\n  return /*#__PURE__*/_jsxDEV(Suspense, {\n    fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"Loading events...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 14\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(Await, {\n      resolve: events,\n      children: loadedEvents => {\n        /*#__PURE__*/_jsxDEV(EventsList, {\n          events: loadedEvents\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 6\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 3\n  }, this);\n}\n_s(EventsPage, \"xTcuS98fsVcq20se00iLm8bDBmQ=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nconst loadEvents = async () => {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    // return { isError: true, message: \"Couldn't fetch events :(\" };\n    // throw { message: \"Couldn't fetch events :(\" };\n    // throw new Response(\n    // \tJSON.stringify({ message: \"Couldn't fetch events :(\" }),\n    // \t{ status: 500 }\n    // );\n    throw json({\n      message: \"Couldn't fetch events :(\"\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n    // return response;\n  }\n};\n\nexport const loader = () => {\n  return defer({\n    events: loadEvents()\n  });\n};\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","json","defer","Await","Suspense","EventsList","jsxDEV","_jsxDEV","EventsPage","_s","events","fallback","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","resolve","loadedEvents","_c","loadEvents","response","fetch","ok","message","status","resData","loader","$RefreshReg$"],"sources":["D:/React JS/Advance Routing/frontend/src/pages/Events.js"],"sourcesContent":["import { useLoaderData, json, defer, Await } from \"react-router-dom\";\r\nimport { Suspense } from \"react\";\r\n\r\nimport EventsList from \"../components/EventsList\";\r\n\r\nfunction EventsPage() {\r\n\tconst { events } = useLoaderData();\r\n\t// console.log(events);\r\n\t// const events = data.events;\r\n\r\n\t// if (data.isError) {\r\n\t// \treturn <p>{data.message}</p>;\r\n\t// }\r\n\r\n\t// return <EventsList events={data.events} />;\r\n\r\n\treturn (\r\n\t\t<Suspense\r\n\t\t\tfallback={<p style={{ textAlign: \"center\" }}>Loading events...</p>}\r\n\t\t>\r\n\t\t\t<Await resolve={events}>\r\n\t\t\t\t{(loadedEvents) => {\r\n\t\t\t\t\t<EventsList events={loadedEvents} />;\r\n\t\t\t\t}}\r\n\t\t\t</Await>\r\n\t\t</Suspense>\r\n\t);\r\n}\r\n\r\nexport default EventsPage;\r\n\r\nconst loadEvents = async () => {\r\n\tconst response = await fetch(\"http://localhost:8080/events\");\r\n\r\n\tif (!response.ok) {\r\n\t\t// return { isError: true, message: \"Couldn't fetch events :(\" };\r\n\t\t// throw { message: \"Couldn't fetch events :(\" };\r\n\t\t// throw new Response(\r\n\t\t// \tJSON.stringify({ message: \"Couldn't fetch events :(\" }),\r\n\t\t// \t{ status: 500 }\r\n\t\t// );\r\n\t\tthrow json({ message: \"Couldn't fetch events :(\" }, { status: 500 });\r\n\t} else {\r\n\t\tconst resData = await response.json();\r\n\t\treturn resData.events;\r\n\t\t// return response;\r\n\t}\r\n};\r\n\r\nexport const loader = () => {\r\n\treturn defer({\r\n\t\tevents: loadEvents(),\r\n\t});\r\n};\r\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,QAAQ,kBAAkB;AACpE,SAASC,QAAQ,QAAQ,OAAO;AAEhC,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM;IAAEC;EAAO,CAAC,GAAGV,aAAa,CAAC,CAAC;EAClC;EACA;;EAEA;EACA;EACA;;EAEA;;EAEA,oBACCO,OAAA,CAACH,QAAQ;IACRO,QAAQ,eAAEJ,OAAA;MAAGK,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAS,CAAE;MAAAC,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAE;IAAAJ,QAAA,eAEnEP,OAAA,CAACJ,KAAK;MAACgB,OAAO,EAAET,MAAO;MAAAI,QAAA,EACpBM,YAAY,IAAK;QAClB,aAAAb,OAAA,CAACF,UAAU;UAACK,MAAM,EAAEU;QAAa;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACrC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEb;AAACT,EAAA,CAtBQD,UAAU;EAAA,QACCR,aAAa;AAAA;AAAAqB,EAAA,GADxBb,UAAU;AAwBnB,eAAeA,UAAU;AAEzB,MAAMc,UAAU,GAAG,MAAAA,CAAA,KAAY;EAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IACjB;IACA;IACA;IACA;IACA;IACA;IACA,MAAMxB,IAAI,CAAC;MAAEyB,OAAO,EAAE;IAA2B,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACrE,CAAC,MAAM;IACN,MAAMC,OAAO,GAAG,MAAML,QAAQ,CAACtB,IAAI,CAAC,CAAC;IACrC,OAAO2B,OAAO,CAAClB,MAAM;IACrB;EACD;AACD,CAAC;;AAED,OAAO,MAAMmB,MAAM,GAAGA,CAAA,KAAM;EAC3B,OAAO3B,KAAK,CAAC;IACZQ,MAAM,EAAEY,UAAU,CAAC;EACpB,CAAC,CAAC;AACH,CAAC;AAAC,IAAAD,EAAA;AAAAS,YAAA,CAAAT,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
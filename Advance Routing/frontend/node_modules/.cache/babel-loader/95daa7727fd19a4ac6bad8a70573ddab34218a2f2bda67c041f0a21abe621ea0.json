{"ast":null,"code":"var _jsxFileName = \"D:\\\\React JS\\\\Advance Routing\\\\frontend\\\\src\\\\pages\\\\EventDetail.js\",\n  _s = $RefreshSig$();\n// import { json, redirect, useRouteLoaderData } from \"react-router-dom\";\n// import EventItem from \"../components/EventItem\";\n\n// const EventDetailPage = () => {\n// \tconst data = useRouteLoaderData(\"event-detail\");\n\n// \treturn <EventItem event={data.event} />;\n// };\n\n// export default EventDetailPage;\n\n// export const loader = async ({ params }) => {\n// \tconst id = params.eventId;\n\n// \tconst response = await fetch(\"http://localhost:8080/events/\" + id);\n\n// \tif (!response.ok) {\n// \t\tthrow json(\n// \t\t\t{ message: \"Couldn't fetch the details of this event :(\" },\n// \t\t\t{ status: 500 }\n// \t\t);\n// \t} else {\n// \t\treturn response;\n// \t}\n// };\n\n// export const action = async ({ params, request }) => {\n// \tconst id = params.eventId;\n\n// \tconst response = await fetch(\"http://localhost:8080/events/\" + id, {\n// \t\tmethod: request.method,\n// \t});\n\n// \tif (!response.ok) {\n// \t\tthrow json(\n// \t\t\t{ message: \"Couldn't delete this event :(\" },\n// \t\t\t{ status: 500 }\n// \t\t);\n// \t}\n\n// \treturn redirect(\"/events\");\n// };\n\nimport { Suspense } from \"react\";\nimport { useRouteLoaderData, json, redirect, defer, Await } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport EventsList from \"../components/EventsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventDetailPage() {\n  _s();\n  const {\n    event,\n    events\n  } = useRouteLoaderData(\"event-detail\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        resolve: event,\n        children: loadedEvent => /*#__PURE__*/_jsxDEV(EventItem, {\n          event: loadedEvent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        resolve: events,\n        children: loadedEvents => /*#__PURE__*/_jsxDEV(EventsList, {\n          events: loadedEvents\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n_s(EventDetailPage, \"RYHFM3+vnAtCT3vK8ii1+i0+Nsk=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nasync function loadEvent(id) {\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!response.ok) {\n    throw json({\n      message: \"Could not fetch details for selected event.\"\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.event;\n  }\n}\nasync function loadEvents() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    // return { isError: true, message: 'Could not fetch events.' };\n    // throw new Response(JSON.stringify({ message: 'Could not fetch events.' }), {\n    //   status: 500,\n    // });\n    throw json({\n      message: \"Could not fetch events.\"\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.eventId;\n  return defer({\n    event: await loadEvent(id),\n    events: loadEvents()\n  });\n}\nexport async function action({\n  params,\n  request\n}) {\n  const eventId = params.eventId;\n  const response = await fetch(\"http://localhost:8080/events/\" + eventId, {\n    method: request.method\n  });\n  if (!response.ok) {\n    throw json({\n      message: \"Could not delete event.\"\n    }, {\n      status: 500\n    });\n  }\n  return redirect(\"/events\");\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["Suspense","useRouteLoaderData","json","redirect","defer","Await","EventItem","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","event","events","children","fallback","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","resolve","loadedEvent","loadedEvents","_c","loadEvent","id","response","fetch","ok","message","status","resData","loadEvents","loader","request","params","eventId","action","method","$RefreshReg$"],"sources":["D:/React JS/Advance Routing/frontend/src/pages/EventDetail.js"],"sourcesContent":["// import { json, redirect, useRouteLoaderData } from \"react-router-dom\";\r\n// import EventItem from \"../components/EventItem\";\r\n\r\n// const EventDetailPage = () => {\r\n// \tconst data = useRouteLoaderData(\"event-detail\");\r\n\r\n// \treturn <EventItem event={data.event} />;\r\n// };\r\n\r\n// export default EventDetailPage;\r\n\r\n// export const loader = async ({ params }) => {\r\n// \tconst id = params.eventId;\r\n\r\n// \tconst response = await fetch(\"http://localhost:8080/events/\" + id);\r\n\r\n// \tif (!response.ok) {\r\n// \t\tthrow json(\r\n// \t\t\t{ message: \"Couldn't fetch the details of this event :(\" },\r\n// \t\t\t{ status: 500 }\r\n// \t\t);\r\n// \t} else {\r\n// \t\treturn response;\r\n// \t}\r\n// };\r\n\r\n// export const action = async ({ params, request }) => {\r\n// \tconst id = params.eventId;\r\n\r\n// \tconst response = await fetch(\"http://localhost:8080/events/\" + id, {\r\n// \t\tmethod: request.method,\r\n// \t});\r\n\r\n// \tif (!response.ok) {\r\n// \t\tthrow json(\r\n// \t\t\t{ message: \"Couldn't delete this event :(\" },\r\n// \t\t\t{ status: 500 }\r\n// \t\t);\r\n// \t}\r\n\r\n// \treturn redirect(\"/events\");\r\n// };\r\n\r\nimport { Suspense } from \"react\";\r\nimport {\r\n\tuseRouteLoaderData,\r\n\tjson,\r\n\tredirect,\r\n\tdefer,\r\n\tAwait,\r\n} from \"react-router-dom\";\r\n\r\nimport EventItem from \"../components/EventItem\";\r\nimport EventsList from \"../components/EventsList\";\r\n\r\nfunction EventDetailPage() {\r\n\tconst { event, events } = useRouteLoaderData(\"event-detail\");\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Suspense\r\n\t\t\t\tfallback={<p style={{ textAlign: \"center\" }}>Loading...</p>}\r\n\t\t\t>\r\n\t\t\t\t<Await resolve={event}>\r\n\t\t\t\t\t{(loadedEvent) => <EventItem event={loadedEvent} />}\r\n\t\t\t\t</Await>\r\n\t\t\t</Suspense>\r\n\t\t\t<Suspense\r\n\t\t\t\tfallback={<p style={{ textAlign: \"center\" }}>Loading...</p>}\r\n\t\t\t>\r\n\t\t\t\t<Await resolve={events}>\r\n\t\t\t\t\t{(loadedEvents) => <EventsList events={loadedEvents} />}\r\n\t\t\t\t</Await>\r\n\t\t\t</Suspense>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default EventDetailPage;\r\n\r\nasync function loadEvent(id) {\r\n\tconst response = await fetch(\"http://localhost:8080/events/\" + id);\r\n\r\n\tif (!response.ok) {\r\n\t\tthrow json(\r\n\t\t\t{ message: \"Could not fetch details for selected event.\" },\r\n\t\t\t{\r\n\t\t\t\tstatus: 500,\r\n\t\t\t}\r\n\t\t);\r\n\t} else {\r\n\t\tconst resData = await response.json();\r\n\t\treturn resData.event;\r\n\t}\r\n}\r\n\r\nasync function loadEvents() {\r\n\tconst response = await fetch(\"http://localhost:8080/events\");\r\n\r\n\tif (!response.ok) {\r\n\t\t// return { isError: true, message: 'Could not fetch events.' };\r\n\t\t// throw new Response(JSON.stringify({ message: 'Could not fetch events.' }), {\r\n\t\t//   status: 500,\r\n\t\t// });\r\n\t\tthrow json(\r\n\t\t\t{ message: \"Could not fetch events.\" },\r\n\t\t\t{\r\n\t\t\t\tstatus: 500,\r\n\t\t\t}\r\n\t\t);\r\n\t} else {\r\n\t\tconst resData = await response.json();\r\n\t\treturn resData.events;\r\n\t}\r\n}\r\n\r\nexport async function loader({ request, params }) {\r\n\tconst id = params.eventId;\r\n\r\n\treturn defer({\r\n\t\tevent: await loadEvent(id),\r\n\t\tevents: loadEvents(),\r\n\t});\r\n}\r\n\r\nexport async function action({ params, request }) {\r\n\tconst eventId = params.eventId;\r\n\tconst response = await fetch(\"http://localhost:8080/events/\" + eventId, {\r\n\t\tmethod: request.method,\r\n\t});\r\n\r\n\tif (!response.ok) {\r\n\t\tthrow json(\r\n\t\t\t{ message: \"Could not delete event.\" },\r\n\t\t\t{\r\n\t\t\t\tstatus: 500,\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\treturn redirect(\"/events\");\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
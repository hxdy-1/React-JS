{"ast":null,"code":"var _jsxFileName = \"D:\\\\React JS\\\\Advance Routing\\\\frontend\\\\src\\\\pages\\\\EventDetail.js\",\n  _s = $RefreshSig$();\nimport { Await, defer, json, redirect, useRouteLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { Suspense } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventDetailPage = () => {\n  _s();\n  const {\n    event,\n    events\n  } = useRouteLoaderData(\"event-detail\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 15\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        resolve: event,\n        children: loadedEvent => /*#__PURE__*/_jsxDEV(EventItem, {\n          event: loadEvent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 15\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        resolve: events,\n        children: loadedEvents => /*#__PURE__*/_jsxDEV(EventsList, {\n          events: loadEvents\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n_s(EventDetailPage, \"RYHFM3+vnAtCT3vK8ii1+i0+Nsk=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nconst loadEvent = async id => {\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!response.ok) {\n    throw json({\n      message: \"Couldn't fetch the details of this event :(\"\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.event;\n  }\n};\nconst loadEvents = async () => {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    // return { isError: true, message: \"Couldn't fetch events :(\" };\n    // throw { message: \"Couldn't fetch events :(\" };\n    // throw new Response(\n    // \tJSON.stringify({ message: \"Couldn't fetch events :(\" }),\n    // \t{ status: 500 }\n    // );\n    throw json({\n      message: \"Couldn't fetch events :(\"\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n    // return response;\n  }\n};\n\nexport const loader = async ({\n  params\n}) => {\n  const id = params.eventId;\n  return defer({\n    event: loadEvent(id),\n    events: loadEvents()\n  });\n};\nexport const action = async ({\n  params,\n  request\n}) => {\n  const id = params.eventId;\n  const response = await fetch(\"http://localhost:8080/events/\" + id, {\n    method: request.method\n  });\n  if (!response.ok) {\n    throw json({\n      message: \"Couldn't delete this event :(\"\n    }, {\n      status: 500\n    });\n  }\n  return redirect(\"/events\");\n};\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["Await","defer","json","redirect","useRouteLoaderData","EventItem","Suspense","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","event","events","children","fallback","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","resolve","loadedEvent","loadEvent","loadedEvents","EventsList","loadEvents","_c","id","response","fetch","ok","message","status","resData","loader","params","eventId","action","request","method","$RefreshReg$"],"sources":["D:/React JS/Advance Routing/frontend/src/pages/EventDetail.js"],"sourcesContent":["import {\r\n\tAwait,\r\n\tdefer,\r\n\tjson,\r\n\tredirect,\r\n\tuseRouteLoaderData,\r\n} from \"react-router-dom\";\r\nimport EventItem from \"../components/EventItem\";\r\nimport { Suspense } from \"react\";\r\n\r\nconst EventDetailPage = () => {\r\n\tconst { event, events } = useRouteLoaderData(\"event-detail\");\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Suspense\r\n\t\t\t\tfallback={<p style={{ textAlign: \"center\" }}>Loading...</p>}\r\n\t\t\t>\r\n\t\t\t\t<Await resolve={event}>\r\n\t\t\t\t\t{(loadedEvent) => <EventItem event={loadEvent} />}\r\n\t\t\t\t</Await>\r\n\t\t\t</Suspense>\r\n\t\t\t<Suspense\r\n\t\t\t\tfallback={<p style={{ textAlign: \"center\" }}>Loading...</p>}\r\n\t\t\t>\r\n\t\t\t\t<Await resolve={events}>\r\n\t\t\t\t\t{(loadedEvents) => (\r\n\t\t\t\t\t\t<EventsList events={loadEvents}></EventsList>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Await>\r\n\t\t\t</Suspense>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default EventDetailPage;\r\n\r\nconst loadEvent = async (id) => {\r\n\tconst response = await fetch(\"http://localhost:8080/events/\" + id);\r\n\r\n\tif (!response.ok) {\r\n\t\tthrow json(\r\n\t\t\t{ message: \"Couldn't fetch the details of this event :(\" },\r\n\t\t\t{ status: 500 }\r\n\t\t);\r\n\t} else {\r\n\t\tconst resData = await response.json();\r\n\t\treturn resData.event;\r\n\t}\r\n};\r\n\r\nconst loadEvents = async () => {\r\n\tconst response = await fetch(\"http://localhost:8080/events\");\r\n\r\n\tif (!response.ok) {\r\n\t\t// return { isError: true, message: \"Couldn't fetch events :(\" };\r\n\t\t// throw { message: \"Couldn't fetch events :(\" };\r\n\t\t// throw new Response(\r\n\t\t// \tJSON.stringify({ message: \"Couldn't fetch events :(\" }),\r\n\t\t// \t{ status: 500 }\r\n\t\t// );\r\n\t\tthrow json({ message: \"Couldn't fetch events :(\" }, { status: 500 });\r\n\t} else {\r\n\t\tconst resData = await response.json();\r\n\t\treturn resData.events;\r\n\t\t// return response;\r\n\t}\r\n};\r\n\r\nexport const loader = async ({ params }) => {\r\n\tconst id = params.eventId;\r\n\r\n\treturn defer({\r\n\t\tevent: loadEvent(id),\r\n\t\tevents: loadEvents(),\r\n\t});\r\n};\r\n\r\nexport const action = async ({ params, request }) => {\r\n\tconst id = params.eventId;\r\n\r\n\tconst response = await fetch(\"http://localhost:8080/events/\" + id, {\r\n\t\tmethod: request.method,\r\n\t});\r\n\r\n\tif (!response.ok) {\r\n\t\tthrow json(\r\n\t\t\t{ message: \"Couldn't delete this event :(\" },\r\n\t\t\t{ status: 500 }\r\n\t\t);\r\n\t}\r\n\r\n\treturn redirect(\"/events\");\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
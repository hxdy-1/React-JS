{"ast":null,"code":"var _jsxFileName = \"D:\\\\React JS\\\\Advance Routing\\\\frontend\\\\src\\\\pages\\\\EventDetail.js\",\n  _s = $RefreshSig$();\nimport { json, useRouteLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventDetailPage = () => {\n  _s();\n  const data = useRouteLoaderData(\"event-detail\");\n  return /*#__PURE__*/_jsxDEV(EventItem, {\n    event: data.event\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n_s(EventDetailPage, \"4DBW6nwrvXRMSwRBgIay5Sszcp8=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport const loader = async ({\n  params\n}) => {\n  const id = params.eventId;\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!response.ok) {\n    throw json({\n      message: \"Couldn't fetch the details of this event :(\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n};\nexport const action = async ({\n  params,\n  request\n}) => {\n  const id = params.eventId;\n  const response = await fetch(\"http://localhost:8080/events/\" + id, {\n    method: \"DELETE\"\n  });\n  if (!response.ok) {\n    throw json({\n      message: \"Couldn't delete this event this event :(\"\n    }, {\n      status: 500\n    });\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["json","useRouteLoaderData","EventItem","jsxDEV","_jsxDEV","EventDetailPage","_s","data","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","params","id","eventId","response","fetch","ok","message","status","action","request","method","$RefreshReg$"],"sources":["D:/React JS/Advance Routing/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { json, useRouteLoaderData } from \"react-router-dom\";\r\nimport EventItem from \"../components/EventItem\";\r\n\r\nconst EventDetailPage = () => {\r\n\tconst data = useRouteLoaderData(\"event-detail\");\r\n\r\n\treturn <EventItem event={data.event} />;\r\n};\r\n\r\nexport default EventDetailPage;\r\n\r\nexport const loader = async ({ params }) => {\r\n\tconst id = params.eventId;\r\n\r\n\tconst response = await fetch(\"http://localhost:8080/events/\" + id);\r\n\r\n\tif (!response.ok) {\r\n\t\tthrow json(\r\n\t\t\t{ message: \"Couldn't fetch the details of this event :(\" },\r\n\t\t\t{ status: 500 }\r\n\t\t);\r\n\t} else {\r\n\t\treturn response;\r\n\t}\r\n};\r\n\r\nexport const action = async ({ params, request }) => {\r\n\tconst id = params.eventId;\r\n\r\n\tconst response = await fetch(\"http://localhost:8080/events/\" + id, {\r\n\t\tmethod: \"DELETE\",\r\n\t});\r\n\r\n\tif (!response.ok) {\r\n\t\tthrow json(\r\n\t\t\t{ message: \"Couldn't delete this event this event :(\" },\r\n\t\t\t{ status: 500 }\r\n\t\t);\r\n\t}\r\n};\r\n"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,kBAAkB,QAAQ,kBAAkB;AAC3D,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAMC,IAAI,GAAGN,kBAAkB,CAAC,cAAc,CAAC;EAE/C,oBAAOG,OAAA,CAACF,SAAS;IAACM,KAAK,EAAED,IAAI,CAACC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACxC,CAAC;AAACN,EAAA,CAJID,eAAe;EAAA,QACPJ,kBAAkB;AAAA;AAAAY,EAAA,GAD1BR,eAAe;AAMrB,eAAeA,eAAe;AAE9B,OAAO,MAAMS,MAAM,GAAG,MAAAA,CAAO;EAAEC;AAAO,CAAC,KAAK;EAC3C,MAAMC,EAAE,GAAGD,MAAM,CAACE,OAAO;EAEzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGH,EAAE,CAAC;EAElE,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IACjB,MAAMpB,IAAI,CACT;MAAEqB,OAAO,EAAE;IAA8C,CAAC,EAC1D;MAAEC,MAAM,EAAE;IAAI,CACf,CAAC;EACF,CAAC,MAAM;IACN,OAAOJ,QAAQ;EAChB;AACD,CAAC;AAED,OAAO,MAAMK,MAAM,GAAG,MAAAA,CAAO;EAAER,MAAM;EAAES;AAAQ,CAAC,KAAK;EACpD,MAAMR,EAAE,GAAGD,MAAM,CAACE,OAAO;EAEzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGH,EAAE,EAAE;IAClES,MAAM,EAAE;EACT,CAAC,CAAC;EAEF,IAAI,CAACP,QAAQ,CAACE,EAAE,EAAE;IACjB,MAAMpB,IAAI,CACT;MAAEqB,OAAO,EAAE;IAA2C,CAAC,EACvD;MAAEC,MAAM,EAAE;IAAI,CACf,CAAC;EACF;AACD,CAAC;AAAC,IAAAT,EAAA;AAAAa,YAAA,CAAAb,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { act } from \"react-dom/test-utils\";\nimport { uiActions } from \"./ui-slice\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    itemsArr: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    addToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.itemsArr.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      if (!existingItem) {\n        state.itemsArr.push({\n          id: newItem.id,\n          price: newItem.price,\n          totalPrice: newItem.price,\n          quantity: 1,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.itemsArr.find(item => item.id === id);\n      state.totalQuantity--;\n      if (existingItem.quantity === 1) {\n        state.itemsArr = state.itemsArr.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n  }\n});\nconst sendCartData = async cart => {\n  return async dispatcher => {\n    dispatcher(uiActions.showNotification({\n      status: \"pending\",\n      title: \"Sending...\",\n      message: \"Sending cart data...!\"\n    }));\n    const sendRequest = async () => {\n      const response = await fetch(\"https://redux-cart-8b606-default-rtdb.firebaseio.com/cart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch\");\n      }\n    };\n    try {\n      await sendRequest();\n      dispatcher(uiActions.showNotification({\n        status: \"success\",\n        title: \"Success!!!\",\n        message: \"Successfully sent the cart data :)\"\n      }));\n    } catch (error) {\n      dispatcher(uiActions.showNotification({\n        status: \"error\",\n        title: \"Error\",\n        message: \"Sending cart data failed :(\"\n      }));\n    }\n  };\n};\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","act","uiActions","cartSlice","name","initialState","itemsArr","totalQuantity","reducers","addToCart","state","action","newItem","payload","existingItem","find","item","id","push","price","totalPrice","quantity","title","removeFromCart","filter","sendCartData","cart","dispatcher","showNotification","status","message","sendRequest","response","fetch","method","body","JSON","stringify","ok","Error","error","cartActions","actions"],"sources":["D:/React JS/Redux Cart (Async)/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { act } from \"react-dom/test-utils\";\r\nimport { uiActions } from \"./ui-slice\";\r\n\r\nconst cartSlice = createSlice({\r\n\tname: \"cart\",\r\n\tinitialState: {\r\n\t\titemsArr: [],\r\n\t\ttotalQuantity: 0,\r\n\t},\r\n\treducers: {\r\n\t\taddToCart(state, action) {\r\n\t\t\tconst newItem = action.payload;\r\n\r\n\t\t\tconst existingItem = state.itemsArr.find(\r\n\t\t\t\t(item) => item.id === newItem.id\r\n\t\t\t);\r\n\r\n\t\t\tstate.totalQuantity++;\r\n\r\n\t\t\tif (!existingItem) {\r\n\t\t\t\tstate.itemsArr.push({\r\n\t\t\t\t\tid: newItem.id,\r\n\t\t\t\t\tprice: newItem.price,\r\n\t\t\t\t\ttotalPrice: newItem.price,\r\n\t\t\t\t\tquantity: 1,\r\n\t\t\t\t\tname: newItem.title,\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\texistingItem.quantity++;\r\n\t\t\t\texistingItem.totalPrice =\r\n\t\t\t\t\texistingItem.totalPrice + newItem.price;\r\n\t\t\t}\r\n\t\t},\r\n\t\tremoveFromCart(state, action) {\r\n\t\t\tconst id = action.payload;\r\n\t\t\tconst existingItem = state.itemsArr.find((item) => item.id === id);\r\n\t\t\tstate.totalQuantity--;\r\n\t\t\tif (existingItem.quantity === 1) {\r\n\t\t\t\tstate.itemsArr = state.itemsArr.filter(\r\n\t\t\t\t\t(item) => item.id !== id\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\texistingItem.quantity--;\r\n\t\t\t\texistingItem.totalPrice =\r\n\t\t\t\t\texistingItem.totalPrice - existingItem.price;\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n});\r\n\r\nconst sendCartData = async (cart) => {\r\n\treturn async (dispatcher) => {\r\n\t\tdispatcher(\r\n\t\t\tuiActions.showNotification({\r\n\t\t\t\tstatus: \"pending\",\r\n\t\t\t\ttitle: \"Sending...\",\r\n\t\t\t\tmessage: \"Sending cart data...!\",\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tconst sendRequest = async () => {\r\n\t\t\tconst response = await fetch(\r\n\t\t\t\t\"https://redux-cart-8b606-default-rtdb.firebaseio.com/cart.json\",\r\n\t\t\t\t{\r\n\t\t\t\t\tmethod: \"PUT\",\r\n\t\t\t\t\tbody: JSON.stringify(cart),\r\n\t\t\t\t}\r\n\t\t\t);\r\n\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tthrow new Error(\"Failed to fetch\");\r\n\t\t\t}\r\n\t\t};\r\n\t\ttry {\r\n\t\t\tawait sendRequest();\r\n\r\n\t\t\tdispatcher(\r\n\t\t\t\tuiActions.showNotification({\r\n\t\t\t\t\tstatus: \"success\",\r\n\t\t\t\t\ttitle: \"Success!!!\",\r\n\t\t\t\t\tmessage: \"Successfully sent the cart data :)\",\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t} catch (error) {\r\n\t\t\tdispatcher(\r\n\t\t\t\tuiActions.showNotification({\r\n\t\t\t\t\tstatus: \"error\",\r\n\t\t\t\t\ttitle: \"Error\",\r\n\t\t\t\t\tmessage: \"Sending cart data failed :(\",\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const cartActions = cartSlice.actions;\r\n\r\nexport default cartSlice;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
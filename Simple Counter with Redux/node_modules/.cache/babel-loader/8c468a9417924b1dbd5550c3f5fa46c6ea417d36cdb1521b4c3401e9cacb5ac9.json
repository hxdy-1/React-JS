{"ast":null,"code":"// import { createStore } from \"redux\";\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\nconst initialAuthState = {\n  isAuthenticated: false\n};\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n    toggle(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n    logout(state) {\n      state.isAuthenticated = false;\n    }\n  }\n});\n\n// const counterReducer = (state = initialState, action) => {\n// \tif (action.type === \"increment\") {\n// \t\treturn {\n// \t\t\tcounter: state.counter + 1,\n// \t\t\tshowCounter: state.showCounter,\n// \t\t};\n// \t}\n\n// \tif (action.type === \"decrement\") {\n// \t\treturn {\n// \t\t\tcounter: state.counter - 1,\n// \t\t\tshowCounter: state.showCounter,\n// \t\t};\n// \t}\n\n// \tif (action.type === \"increase\") {\n// \t\treturn {\n// \t\t\tcounter: state.counter + action.amount,\n// \t\t\tshowCounter: state.showCounter,\n// \t\t};\n// \t}\n\n// \tif (action.type === \"toggle\") {\n// \t\treturn {\n// \t\t\tshowCounter: !state.showCounter,\n// \t\t\tcounter: state.counter,\n// \t\t};\n// \t}\n\n// \t// if (action.type === \"decrease\") {\n// \t//     return {\n// \t//         counter: state.counter - action.amount,\n// \t//     };\n// \t// }\n\n// \treturn state;\n// };\n\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport const authActions = authSlice.actions;\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","initialCounterState","counter","showCounter","initialAuthState","isAuthenticated","counterSlice","name","initialState","reducers","increment","state","decrement","increase","action","payload","toggle","authSlice","login","logout","store","reducer","auth","counterActions","actions","authActions"],"sources":["D:/React JS/Simple Counter with Redux/src/store/redux.js"],"sourcesContent":["// import { createStore } from \"redux\";\r\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\r\n\r\nconst initialCounterState = { counter: 0, showCounter: true };\r\nconst initialAuthState = { isAuthenticated: false };\r\n\r\nconst counterSlice = createSlice({\r\n\tname: \"counter\",\r\n\tinitialState: initialCounterState,\r\n\treducers: {\r\n\t\tincrement(state) {\r\n\t\t\tstate.counter++;\r\n\t\t},\r\n\t\tdecrement(state) {\r\n\t\t\tstate.counter--;\r\n\t\t},\r\n\t\tincrease(state, action) {\r\n\t\t\tstate.counter = state.counter + action.payload;\r\n\t\t},\r\n\t\ttoggle(state) {\r\n\t\t\tstate.showCounter = !state.showCounter;\r\n\t\t},\r\n\t},\r\n});\r\n\r\nconst authSlice = createSlice({\r\n\tname: \"auth\",\r\n\tinitialState: initialAuthState,\r\n\treducers: {\r\n\t\tlogin(state) {\r\n\t\t\tstate.isAuthenticated = true;\r\n\t\t},\r\n\r\n\t\tlogout(state) {\r\n\t\t\tstate.isAuthenticated = false;\r\n\t\t},\r\n\t},\r\n});\r\n\r\n// const counterReducer = (state = initialState, action) => {\r\n// \tif (action.type === \"increment\") {\r\n// \t\treturn {\r\n// \t\t\tcounter: state.counter + 1,\r\n// \t\t\tshowCounter: state.showCounter,\r\n// \t\t};\r\n// \t}\r\n\r\n// \tif (action.type === \"decrement\") {\r\n// \t\treturn {\r\n// \t\t\tcounter: state.counter - 1,\r\n// \t\t\tshowCounter: state.showCounter,\r\n// \t\t};\r\n// \t}\r\n\r\n// \tif (action.type === \"increase\") {\r\n// \t\treturn {\r\n// \t\t\tcounter: state.counter + action.amount,\r\n// \t\t\tshowCounter: state.showCounter,\r\n// \t\t};\r\n// \t}\r\n\r\n// \tif (action.type === \"toggle\") {\r\n// \t\treturn {\r\n// \t\t\tshowCounter: !state.showCounter,\r\n// \t\t\tcounter: state.counter,\r\n// \t\t};\r\n// \t}\r\n\r\n// \t// if (action.type === \"decrease\") {\r\n// \t//     return {\r\n// \t//         counter: state.counter - action.amount,\r\n// \t//     };\r\n// \t// }\r\n\r\n// \treturn state;\r\n// };\r\n\r\nconst store = configureStore({\r\n\treducer: { counter: counterSlice.reducer, auth: authSlice.reducer },\r\n});\r\n\r\nexport const counterActions = counterSlice.actions;\r\n\r\nexport const authActions = authSlice.actions;\r\n\r\nexport default store;\r\n"],"mappings":"AAAA;AACA,SAASA,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAE9D,MAAMC,mBAAmB,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC;AAC7D,MAAMC,gBAAgB,GAAG;EAAEC,eAAe,EAAE;AAAM,CAAC;AAEnD,MAAMC,YAAY,GAAGP,WAAW,CAAC;EAChCQ,IAAI,EAAE,SAAS;EACfC,YAAY,EAAEP,mBAAmB;EACjCQ,QAAQ,EAAE;IACTC,SAASA,CAACC,KAAK,EAAE;MAChBA,KAAK,CAACT,OAAO,EAAE;IAChB,CAAC;IACDU,SAASA,CAACD,KAAK,EAAE;MAChBA,KAAK,CAACT,OAAO,EAAE;IAChB,CAAC;IACDW,QAAQA,CAACF,KAAK,EAAEG,MAAM,EAAE;MACvBH,KAAK,CAACT,OAAO,GAAGS,KAAK,CAACT,OAAO,GAAGY,MAAM,CAACC,OAAO;IAC/C,CAAC;IACDC,MAAMA,CAACL,KAAK,EAAE;MACbA,KAAK,CAACR,WAAW,GAAG,CAACQ,KAAK,CAACR,WAAW;IACvC;EACD;AACD,CAAC,CAAC;AAEF,MAAMc,SAAS,GAAGlB,WAAW,CAAC;EAC7BQ,IAAI,EAAE,MAAM;EACZC,YAAY,EAAEJ,gBAAgB;EAC9BK,QAAQ,EAAE;IACTS,KAAKA,CAACP,KAAK,EAAE;MACZA,KAAK,CAACN,eAAe,GAAG,IAAI;IAC7B,CAAC;IAEDc,MAAMA,CAACR,KAAK,EAAE;MACbA,KAAK,CAACN,eAAe,GAAG,KAAK;IAC9B;EACD;AACD,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,MAAMe,KAAK,GAAGpB,cAAc,CAAC;EAC5BqB,OAAO,EAAE;IAAEnB,OAAO,EAAEI,YAAY,CAACe,OAAO;IAAEC,IAAI,EAAEL,SAAS,CAACI;EAAQ;AACnE,CAAC,CAAC;AAEF,OAAO,MAAME,cAAc,GAAGjB,YAAY,CAACkB,OAAO;AAElD,OAAO,MAAMC,WAAW,GAAGR,SAAS,CAACO,OAAO;AAE5C,eAAeJ,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}
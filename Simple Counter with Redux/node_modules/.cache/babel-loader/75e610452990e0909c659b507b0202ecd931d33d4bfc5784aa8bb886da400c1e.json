{"ast":null,"code":"import { createStore } from \"redux\";\nconst counterReducer = (state = {\n  counter: 0,\n  showCounter: true\n}, action) => {\n  if (action.type === \"increment\") {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.counter\n    };\n  }\n  if (action.type === \"decrement\") {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.counter\n    };\n  }\n  if (action.type === \"increase\") {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.counter\n    };\n  }\n  if (action.type === \"toggle\") {\n    return {\n      counter: state.counter,\n      showCounter: !state.showCounter\n    };\n  }\n\n  // if (action.type === \"decrease\") {\n  //     return {\n  //         counter: state.counter - action.amount,\n  //     };\n  // }\n\n  return state;\n};\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"names":["createStore","counterReducer","state","counter","showCounter","action","type","amount","store"],"sources":["D:/React JS/Simple Counter with Redux/src/store/redux.js"],"sourcesContent":["import { createStore } from \"redux\";\r\n\r\nconst counterReducer = (state = { counter: 0, showCounter: true }, action) => {\r\n    if (action.type === \"increment\") {\r\n        return {\r\n            counter: state.counter + 1,\r\n            showCounter: state.counter,\r\n        };\r\n    }\r\n\r\n    if (action.type === \"decrement\") {\r\n        return {\r\n            counter: state.counter - 1,\r\n            showCounter: state.counter,\r\n        };\r\n    }\r\n\r\n    if (action.type === \"increase\") {\r\n        return {\r\n            counter: state.counter + action.amount,\r\n            showCounter: state.counter,\r\n        };\r\n    }\r\n\r\n    if (action.type === \"toggle\") {\r\n        return {\r\n            counter: state.counter,\r\n            showCounter: !state.showCounter,\r\n        };\r\n    }\r\n\r\n    // if (action.type === \"decrease\") {\r\n    //     return {\r\n    //         counter: state.counter - action.amount,\r\n    //     };\r\n    // }\r\n\r\n    return state;\r\n};\r\n\r\nconst store = createStore(counterReducer);\r\n\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,OAAO;AAEnC,MAAMC,cAAc,GAAGA,CAACC,KAAK,GAAG;EAAEC,OAAO,EAAE,CAAC;EAAEC,WAAW,EAAE;AAAK,CAAC,EAAEC,MAAM,KAAK;EAC1E,IAAIA,MAAM,CAACC,IAAI,KAAK,WAAW,EAAE;IAC7B,OAAO;MACHH,OAAO,EAAED,KAAK,CAACC,OAAO,GAAG,CAAC;MAC1BC,WAAW,EAAEF,KAAK,CAACC;IACvB,CAAC;EACL;EAEA,IAAIE,MAAM,CAACC,IAAI,KAAK,WAAW,EAAE;IAC7B,OAAO;MACHH,OAAO,EAAED,KAAK,CAACC,OAAO,GAAG,CAAC;MAC1BC,WAAW,EAAEF,KAAK,CAACC;IACvB,CAAC;EACL;EAEA,IAAIE,MAAM,CAACC,IAAI,KAAK,UAAU,EAAE;IAC5B,OAAO;MACHH,OAAO,EAAED,KAAK,CAACC,OAAO,GAAGE,MAAM,CAACE,MAAM;MACtCH,WAAW,EAAEF,KAAK,CAACC;IACvB,CAAC;EACL;EAEA,IAAIE,MAAM,CAACC,IAAI,KAAK,QAAQ,EAAE;IAC1B,OAAO;MACHH,OAAO,EAAED,KAAK,CAACC,OAAO;MACtBC,WAAW,EAAE,CAACF,KAAK,CAACE;IACxB,CAAC;EACL;;EAEA;EACA;EACA;EACA;EACA;;EAEA,OAAOF,KAAK;AAChB,CAAC;AAED,MAAMM,KAAK,GAAGR,WAAW,CAACC,cAAc,CAAC;AAEzC,eAAeO,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\React JS\\\\15-Authentication with Routing\\\\frontend\\\\src\\\\pages\\\\Authentication.js\";\nimport { json, redirect } from \"react-router-dom\";\nimport AuthForm from \"../components/AuthForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AuthenticationPage() {\n  return /*#__PURE__*/_jsxDEV(AuthForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n}\n_c = AuthenticationPage;\nexport default AuthenticationPage;\nexport const action = async ({\n  request\n}) => {\n  const searchParams = new URL(request.url).searchParams;\n  const mode = searchParams.get(\"mode\") || \"login\";\n  if (mode !== \"login\" && mode !== \"signup\") {\n    throw json({\n      message: \"This mode is not supported\"\n    }, {\n      status: 422\n    });\n  }\n  const data = await request.formData();\n  const authData = {\n    email: data.get(\"email\"),\n    password: data.get(\"password\")\n  };\n  const response = await fetch(\"http://localhost:8080/\" + mode, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(authData)\n  });\n  if (response.status === 422 || response.status === 401) {\n    return response;\n  }\n  if (!response.ok) {\n    throw json({\n      message: \"Couldn't authenticate the user\"\n    }, {\n      status: 500\n    });\n  }\n  const resData = await response.json();\n  const token = resData.token;\n  localStorage.setItem(\"token\", token);\n  const expiration = new Date();\n  expiration.setHours(expiration.getHours() + 1);\n  localStorage.setItem(\"expiration\", expiration.toISOString());\n  return redirect(\"/\");\n};\nvar _c;\n$RefreshReg$(_c, \"AuthenticationPage\");","map":{"version":3,"names":["json","redirect","AuthForm","jsxDEV","_jsxDEV","AuthenticationPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","searchParams","URL","url","mode","get","message","status","data","formData","authData","email","password","response","fetch","method","headers","body","JSON","stringify","ok","resData","token","localStorage","setItem","expiration","Date","setHours","getHours","toISOString","$RefreshReg$"],"sources":["D:/React JS/15-Authentication with Routing/frontend/src/pages/Authentication.js"],"sourcesContent":["import { json, redirect } from \"react-router-dom\";\r\nimport AuthForm from \"../components/AuthForm\";\r\n\r\nfunction AuthenticationPage() {\r\n\treturn <AuthForm />;\r\n}\r\n\r\nexport default AuthenticationPage;\r\n\r\nexport const action = async ({ request }) => {\r\n\tconst searchParams = new URL(request.url).searchParams;\r\n\tconst mode = searchParams.get(\"mode\") || \"login\";\r\n\r\n\tif (mode !== \"login\" && mode !== \"signup\") {\r\n\t\tthrow json({ message: \"This mode is not supported\" }, { status: 422 });\r\n\t}\r\n\r\n\tconst data = await request.formData();\r\n\tconst authData = {\r\n\t\temail: data.get(\"email\"),\r\n\t\tpassword: data.get(\"password\"),\r\n\t};\r\n\r\n\tconst response = await fetch(\"http://localhost:8080/\" + mode, {\r\n\t\tmethod: \"POST\",\r\n\t\theaders: {\r\n\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t},\r\n\t\tbody: JSON.stringify(authData),\r\n\t});\r\n\r\n\tif (response.status === 422 || response.status === 401) {\r\n\t\treturn response;\r\n\t}\r\n\r\n\tif (!response.ok) {\r\n\t\tthrow json(\r\n\t\t\t{ message: \"Couldn't authenticate the user\" },\r\n\t\t\t{ status: 500 }\r\n\t\t);\r\n\t}\r\n\r\n\tconst resData = await response.json();\r\n\tconst token = resData.token;\r\n\r\n\tlocalStorage.setItem(\"token\", token);\r\n\r\n\tconst expiration = new Date();\r\n\texpiration.setHours(expiration.getHours() + 1);\r\n\tlocalStorage.setItem(\"expiration\", expiration.toISOString());\r\n\r\n\treturn redirect(\"/\");\r\n};\r\n"],"mappings":";AAAA,SAASA,IAAI,EAAEC,QAAQ,QAAQ,kBAAkB;AACjD,OAAOC,QAAQ,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,kBAAkBA,CAAA,EAAG;EAC7B,oBAAOD,OAAA,CAACF,QAAQ;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACpB;AAACC,EAAA,GAFQL,kBAAkB;AAI3B,eAAeA,kBAAkB;AAEjC,OAAO,MAAMM,MAAM,GAAG,MAAAA,CAAO;EAAEC;AAAQ,CAAC,KAAK;EAC5C,MAAMC,YAAY,GAAG,IAAIC,GAAG,CAACF,OAAO,CAACG,GAAG,CAAC,CAACF,YAAY;EACtD,MAAMG,IAAI,GAAGH,YAAY,CAACI,GAAG,CAAC,MAAM,CAAC,IAAI,OAAO;EAEhD,IAAID,IAAI,KAAK,OAAO,IAAIA,IAAI,KAAK,QAAQ,EAAE;IAC1C,MAAMhB,IAAI,CAAC;MAAEkB,OAAO,EAAE;IAA6B,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACvE;EAEA,MAAMC,IAAI,GAAG,MAAMR,OAAO,CAACS,QAAQ,CAAC,CAAC;EACrC,MAAMC,QAAQ,GAAG;IAChBC,KAAK,EAAEH,IAAI,CAACH,GAAG,CAAC,OAAO,CAAC;IACxBO,QAAQ,EAAEJ,IAAI,CAACH,GAAG,CAAC,UAAU;EAC9B,CAAC;EAED,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,wBAAwB,GAAGV,IAAI,EAAE;IAC7DW,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACR,cAAc,EAAE;IACjB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,QAAQ;EAC9B,CAAC,CAAC;EAEF,IAAIG,QAAQ,CAACN,MAAM,KAAK,GAAG,IAAIM,QAAQ,CAACN,MAAM,KAAK,GAAG,EAAE;IACvD,OAAOM,QAAQ;EAChB;EAEA,IAAI,CAACA,QAAQ,CAACO,EAAE,EAAE;IACjB,MAAMhC,IAAI,CACT;MAAEkB,OAAO,EAAE;IAAiC,CAAC,EAC7C;MAAEC,MAAM,EAAE;IAAI,CACf,CAAC;EACF;EAEA,MAAMc,OAAO,GAAG,MAAMR,QAAQ,CAACzB,IAAI,CAAC,CAAC;EACrC,MAAMkC,KAAK,GAAGD,OAAO,CAACC,KAAK;EAE3BC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;EAEpC,MAAMG,UAAU,GAAG,IAAIC,IAAI,CAAC,CAAC;EAC7BD,UAAU,CAACE,QAAQ,CAACF,UAAU,CAACG,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;EAC9CL,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEC,UAAU,CAACI,WAAW,CAAC,CAAC,CAAC;EAE5D,OAAOxC,QAAQ,CAAC,GAAG,CAAC;AACrB,CAAC;AAAC,IAAAS,EAAA;AAAAgC,YAAA,CAAAhC,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
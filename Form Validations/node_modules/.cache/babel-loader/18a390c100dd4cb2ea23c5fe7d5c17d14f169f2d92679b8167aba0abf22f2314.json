{"ast":null,"code":"var _jsxFileName = \"D:\\\\React JS\\\\Form Validations\\\\src\\\\components\\\\SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const {\n    value: enteredName,\n    isValid: isEnteredNameValid,\n    hasError: nameHasError,\n    InputChangeHandler: nameInputChangeHandler,\n    InputBlurHandler: nameInputBlurHandler,\n    reset: resetName\n  } = useInput(value => value.trim().length !== 0);\n\n  // STATES FOR NAME:\n  // const [enteredName, setEnteredName] = useState(\"\");\n  // const [nameWasTouched, setNameWasTouched] = useState(false);\n\n  // STATES FOR EMAIL:\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [emailWasTouched, setEmailWasTouched] = useState(false);\n\n  // const isEnteredNameValid = enteredName.trim().length !== 0;\n  // const nameInputIsInvalid = !isEnteredNameValid && nameWasTouched;\n\n  const isEnteredEmailValid = enteredEmail.trim().length !== 0 && enteredEmail.trim().includes(\"@\");\n  const emailInputIsInvalid = !isEnteredEmailValid && emailWasTouched;\n  let isFormValid = false;\n  if (isEnteredNameValid && isEnteredEmailValid) {\n    isFormValid = true;\n  }\n\n  // NAME:\n  // const nameInputChangeHandler = (e) => {\n  //     setEnteredName(e.target.value);\n  // };\n\n  // const nameInputBlurHandler = (e) => {\n  //     setNameWasTouched(true);\n  // };\n\n  // EMAIL:\n  const emailInputChangeHandler = e => {\n    setEnteredEmail(e.target.value);\n  };\n  const emailInputBlurHandler = e => {\n    setEmailWasTouched(true);\n  };\n\n  // OVERALL FORM:\n  const submissionHandler = e => {\n    e.preventDefault();\n\n    // setNameWasTouched(true);\n\n    if (!isEnteredNameValid) {\n      console.log(\"returned\");\n      return;\n    }\n    console.log(enteredName);\n    console.log(enteredEmail);\n    resetName();\n    // setEnteredName(\"\");\n    // setNameWasTouched(false);\n\n    setEnteredEmail(\"\");\n    setEmailWasTouched(false);\n  };\n  const nameInputClasses = nameHasError ? \"form-control invalid\" : \"form-control\";\n  const emailInputClasses = emailInputIsInvalid ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), nameHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Enter a valid name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your E-mail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailInputChangeHandler,\n        onBlur: emailInputBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), emailInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Enter a valid E-mail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !isFormValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n_s(SimpleInput, \"ugh5bDZ4k89McVcaCjTO/C7Puqc=\", false, function () {\n  return [useInput];\n});\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useInput","jsxDEV","_jsxDEV","SimpleInput","props","_s","value","enteredName","isValid","isEnteredNameValid","hasError","nameHasError","InputChangeHandler","nameInputChangeHandler","InputBlurHandler","nameInputBlurHandler","reset","resetName","trim","length","enteredEmail","setEnteredEmail","emailWasTouched","setEmailWasTouched","isEnteredEmailValid","includes","emailInputIsInvalid","isFormValid","emailInputChangeHandler","e","target","emailInputBlurHandler","submissionHandler","preventDefault","console","log","nameInputClasses","emailInputClasses","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onBlur","disabled","_c","$RefreshReg$"],"sources":["D:/React JS/Form Validations/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\n\nconst SimpleInput = (props) => {\n    const {\n        value: enteredName,\n        isValid: isEnteredNameValid,\n        hasError: nameHasError,\n        InputChangeHandler: nameInputChangeHandler,\n        InputBlurHandler: nameInputBlurHandler,\n        reset: resetName,\n    } = useInput((value) => value.trim().length !== 0);\n\n    // STATES FOR NAME:\n    // const [enteredName, setEnteredName] = useState(\"\");\n    // const [nameWasTouched, setNameWasTouched] = useState(false);\n\n    // STATES FOR EMAIL:\n    const [enteredEmail, setEnteredEmail] = useState(\"\");\n    const [emailWasTouched, setEmailWasTouched] = useState(false);\n\n    // const isEnteredNameValid = enteredName.trim().length !== 0;\n    // const nameInputIsInvalid = !isEnteredNameValid && nameWasTouched;\n\n    const isEnteredEmailValid =\n        enteredEmail.trim().length !== 0 && enteredEmail.trim().includes(\"@\");\n    const emailInputIsInvalid = !isEnteredEmailValid && emailWasTouched;\n\n    let isFormValid = false;\n\n    if (isEnteredNameValid && isEnteredEmailValid) {\n        isFormValid = true;\n    }\n\n    // NAME:\n    // const nameInputChangeHandler = (e) => {\n    //     setEnteredName(e.target.value);\n    // };\n\n    // const nameInputBlurHandler = (e) => {\n    //     setNameWasTouched(true);\n    // };\n\n    // EMAIL:\n    const emailInputChangeHandler = (e) => {\n        setEnteredEmail(e.target.value);\n    };\n\n    const emailInputBlurHandler = (e) => {\n        setEmailWasTouched(true);\n    };\n\n    // OVERALL FORM:\n    const submissionHandler = (e) => {\n        e.preventDefault();\n\n        // setNameWasTouched(true);\n\n        if (!isEnteredNameValid) {\n            console.log(\"returned\");\n            return;\n        }\n\n        console.log(enteredName);\n        console.log(enteredEmail);\n\n        resetName();\n        // setEnteredName(\"\");\n        // setNameWasTouched(false);\n\n        setEnteredEmail(\"\");\n        setEmailWasTouched(false);\n    };\n\n    const nameInputClasses = nameHasError\n        ? \"form-control invalid\"\n        : \"form-control\";\n\n    const emailInputClasses = emailInputIsInvalid\n        ? \"form-control invalid\"\n        : \"form-control\";\n\n    return (\n        <form onSubmit={submissionHandler}>\n            <div className={nameInputClasses}>\n                <label htmlFor=\"name\">Your Name</label>\n                <input\n                    type=\"text\"\n                    id=\"name\"\n                    onChange={nameInputChangeHandler}\n                    onBlur={nameInputBlurHandler}\n                    value={enteredName}\n                />\n                {nameHasError && (\n                    <p className=\"error-text\">Enter a valid name</p>\n                )}\n            </div>\n            <div className={emailInputClasses}>\n                <label htmlFor=\"email\">Your E-mail</label>\n                <input\n                    type=\"email\"\n                    id=\"email\"\n                    onChange={emailInputChangeHandler}\n                    onBlur={emailInputBlurHandler}\n                    value={enteredEmail}\n                />\n                {emailInputIsInvalid && (\n                    <p className=\"error-text\">Enter a valid E-mail</p>\n                )}\n            </div>\n            <div className=\"form-actions\">\n                <button disabled={!isFormValid}>Submit</button>\n            </div>\n        </form>\n    );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\React JS\\\\Form Validations\\\\src\\\\components\\\\SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [nameWasTouched, setNameWasTouched] = useState(false);\n  const [isFormValid, setIsFormValid] = useState(false);\n  const isEnteredNameValid = enteredName.trim().length !== 0;\n  const nameInputIsInvalid = !isEnteredNameValid && nameWasTouched;\n  useEffect(() => {\n    if (isEnteredNameValid) {\n      setIsFormValid(true);\n    } else {\n      setIsFormValid(false);\n    }\n  }, [isEnteredNameValid]);\n  const nameInputChangeHandler = e => {\n    setEnteredName(e.target.value);\n  };\n  const nameInputBlurHandler = e => {\n    setNameWasTouched(true);\n  };\n  const submissionHandler = e => {\n    e.preventDefault();\n    setNameWasTouched(true);\n    if (!isEnteredNameValid) {\n      console.log(\"returned\");\n      return;\n    }\n    console.log(enteredName);\n    setEnteredName(\"\");\n    setNameWasTouched(false);\n  };\n  const inputClasses = nameInputIsInvalid ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: inputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Enter a valid input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(SimpleInput, \"gZ9VC4t6ItqYSSqoV4/PHkr0iTc=\");\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","SimpleInput","props","_s","enteredName","setEnteredName","nameWasTouched","setNameWasTouched","isFormValid","setIsFormValid","isEnteredNameValid","trim","length","nameInputIsInvalid","nameInputChangeHandler","e","target","value","nameInputBlurHandler","submissionHandler","preventDefault","console","log","inputClasses","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","onBlur","_c","$RefreshReg$"],"sources":["D:/React JS/Form Validations/src/components/SimpleInput.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst SimpleInput = (props) => {\n    const [enteredName, setEnteredName] = useState(\"\");\n    const [nameWasTouched, setNameWasTouched] = useState(false);\n    const [isFormValid, setIsFormValid] = useState(false);\n\n    const isEnteredNameValid = enteredName.trim().length !== 0;\n    const nameInputIsInvalid = !isEnteredNameValid && nameWasTouched;\n\n    useEffect(() => {\n        if (isEnteredNameValid) {\n            setIsFormValid(true);\n        } else {\n            setIsFormValid(false);\n        }\n    }, [isEnteredNameValid]);\n\n    const nameInputChangeHandler = (e) => {\n        setEnteredName(e.target.value);\n    };\n\n    const nameInputBlurHandler = (e) => {\n        setNameWasTouched(true);\n    };\n\n    const submissionHandler = (e) => {\n        e.preventDefault();\n\n        setNameWasTouched(true);\n\n        if (!isEnteredNameValid) {\n            console.log(\"returned\");\n            return;\n        }\n        console.log(enteredName);\n\n        setEnteredName(\"\");\n        setNameWasTouched(false);\n    };\n\n    const inputClasses = nameInputIsInvalid\n        ? \"form-control invalid\"\n        : \"form-control\";\n\n    return (\n        <form onSubmit={submissionHandler}>\n            <div className={inputClasses}>\n                <label htmlFor=\"name\">Your Name</label>\n                <input\n                    type=\"text\"\n                    id=\"name\"\n                    onChange={nameInputChangeHandler}\n                    onBlur={nameInputBlurHandler}\n                    value={enteredName}\n                />\n                {nameInputIsInvalid && (\n                    <p className=\"error-text\">Enter a valid input</p>\n                )}\n            </div>\n            <div className=\"form-actions\">\n                <button>Submit</button>\n            </div>\n        </form>\n    );\n};\n\nexport default SimpleInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
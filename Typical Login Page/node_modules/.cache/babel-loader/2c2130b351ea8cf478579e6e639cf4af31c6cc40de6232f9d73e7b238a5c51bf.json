{"ast":null,"code":"var _jsxFileName = \"D:\\\\React JS\\\\Typical Login Page\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport AuthContext from \"./auth-context\";\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    const loggedInInfo = localStorage.getItem(\"isLoggedIn\");\n    if (loggedInInfo === \"1\") {\n      setIsLoggedIn(true);\n    }\n  }, []);\n  const loginHandler = (email, password) => {\n    // We should of course check email and password\n    // But it's just a dummy/ demo anyways\n    localStorage.setItem(\"isLoggedIn\", \"1\");\n    setIsLoggedIn(true);\n  };\n  const logoutHandler = () => {\n    localStorage.removeItem(\"isLoggedIn\");\n    setIsLoggedIn(false);\n  };\n  const authCtx = useContext(AuthContext);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MainHeader, {\n      isAuthenticated: authCtx.isLoggedIn,\n      onLogout: logoutHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [!authCtx.isLoggedIn && /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: loginHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 41\n      }, this), authCtx.isLoggedIn && /*#__PURE__*/_jsxDEV(Home, {\n        onLogout: logoutHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"NGx/bO6LIiq1zKb7myPDfIBl1/g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useContext","AuthContext","Login","Home","MainHeader","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","loggedInInfo","localStorage","getItem","loginHandler","email","password","setItem","logoutHandler","removeItem","authCtx","Fragment","children","isAuthenticated","onLogout","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","_c","$RefreshReg$"],"sources":["D:/React JS/Typical Login Page/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\n\nimport AuthContext from \"./auth-context\";\nimport Login from \"./components/Login/Login\";\nimport Home from \"./components/Home/Home\";\nimport MainHeader from \"./components/MainHeader/MainHeader\";\n\nfunction App() {\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n    useEffect(() => {\n        const loggedInInfo = localStorage.getItem(\"isLoggedIn\");\n\n        if (loggedInInfo === \"1\") {\n            setIsLoggedIn(true);\n        }\n    }, []);\n\n    const loginHandler = (email, password) => {\n        // We should of course check email and password\n        // But it's just a dummy/ demo anyways\n        localStorage.setItem(\"isLoggedIn\", \"1\");\n        setIsLoggedIn(true);\n    };\n\n    const logoutHandler = () => {\n        localStorage.removeItem(\"isLoggedIn\");\n        setIsLoggedIn(false);\n    };\n\n    const authCtx = useContext(AuthContext);\n\n    return (\n        <React.Fragment>\n            <MainHeader\n                isAuthenticated={authCtx.isLoggedIn}\n                onLogout={logoutHandler}\n            />\n            <main>\n                {!authCtx.isLoggedIn && <Login onLogin={loginHandler} />}\n                {authCtx.isLoggedIn && <Home onLogout={logoutHandler} />}\n            </main>\n        </React.Fragment>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAE9D,OAAOC,WAAW,MAAM,gBAAgB;AACxC,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,UAAU,MAAM,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACZ,MAAMY,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IAEvD,IAAIF,YAAY,KAAK,GAAG,EAAE;MACtBD,aAAa,CAAC,IAAI,CAAC;IACvB;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,YAAY,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;IACtC;IACA;IACAJ,YAAY,CAACK,OAAO,CAAC,YAAY,EAAE,GAAG,CAAC;IACvCP,aAAa,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,MAAMQ,aAAa,GAAGA,CAAA,KAAM;IACxBN,YAAY,CAACO,UAAU,CAAC,YAAY,CAAC;IACrCT,aAAa,CAAC,KAAK,CAAC;EACxB,CAAC;EAED,MAAMU,OAAO,GAAGpB,UAAU,CAACC,WAAW,CAAC;EAEvC,oBACIK,OAAA,CAACT,KAAK,CAACwB,QAAQ;IAAAC,QAAA,gBACXhB,OAAA,CAACF,UAAU;MACPmB,eAAe,EAAEH,OAAO,CAACX,UAAW;MACpCe,QAAQ,EAAEN;IAAc;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC,eACFtB,OAAA;MAAAgB,QAAA,GACK,CAACF,OAAO,CAACX,UAAU,iBAAIH,OAAA,CAACJ,KAAK;QAAC2B,OAAO,EAAEf;MAAa;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACvDR,OAAO,CAACX,UAAU,iBAAIH,OAAA,CAACH,IAAI;QAACqB,QAAQ,EAAEN;MAAc;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEzB;AAACpB,EAAA,CArCQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AAuCZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}